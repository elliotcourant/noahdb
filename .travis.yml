sudo: false
language: go

go:
  - "1.12"

os:
  - linux

env:
  global:
    - PGPORT=5433
    - PGDATABASE=postgres
    - PGUSER=postgres
    - PGPASSWORD=''
    - PGHOST=localhost
    - PGX_TEST_DATABASE=postgres://postgres@127.0.0.1:5433/postgres
    - GO111MODULE=on

jobs:
  include:
    - stage: Build & Test
      services:
        - docker
      before_script:
        - go get -v -d google.golang.org/grpc
        - go get -v -d -t github.com/golang/protobuf/...
        - curl -L https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip -o /tmp/protoc.zip
        - mkdir -p "$HOME"/protoc
        - unzip /tmp/protoc.zip -d "$HOME"/protoc
        - mkdir -p "$HOME"/src && ln -s "$HOME"/protoc "$HOME"/src/protobuf
        - go get -u github.com/golang/protobuf/protoc-gen-go
        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - export PATH=$HOME/protoc/bin:$GOPATH/bin:$PATH
        - go mod vendor
        - make generated
      script:
        - make test
        - make coverage
      after_success:
        - bash <(curl -s https://codecov.io/bash)
#    - stage: Build & Publish Docker Image
#      if: branch = master
#      services:
#        - docker
#      before_script:
#        - go get -v -d google.golang.org/grpc
#        - go get -v -d -t github.com/golang/protobuf/...
#        - curl -L https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip -o /tmp/protoc.zip
#        - mkdir -p "$HOME"/protoc
#        - unzip /tmp/protoc.zip -d "$HOME"/protoc
#        - mkdir -p "$HOME"/src && ln -s "$HOME"/protoc "$HOME"/src/protobuf
#        - go get -u github.com/golang/protobuf/protoc-gen-go
#        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#        - export PATH=$HOME/protoc/bin:$GOPATH/bin:$PATH
#        - dep ensure
#        - make generated
#      script:
#        - make docker
#        - echo $DOCKER_PASSWORD | docker login -u=$DOCKER_USERNAME --password-stdin
#        - docker tag noahdb/node:local noahdb/node:local
#        - docker push noahdb/node:local