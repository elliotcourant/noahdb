sudo: true
language: go

go:
  - "1.12"

os:
  - linux

addons:
  postgresql: "10"
  apt:
    packages:
      - postgresql-10
      - postgresql-client-10

env:
  global:
    - PGPORT=5432
    - PGDATABASE=postgres
    - PGUSER=postgres
    - PGPASSWORD=12345
    - PGHOST=localhost
    - PGX_TEST_DATABASE=postgres://postgres:12345@localhost:5432/postgres
    - GO111MODULE=on

jobs:
  include:
    - stage: Build & Test
      services:
        - docker
        - postgresql
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - go get -v -d google.golang.org/grpc
        - go get -v -d -t github.com/golang/protobuf/...
        - curl -L https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip -o /tmp/protoc.zip
        - mkdir -p "$HOME"/protoc
        - unzip /tmp/protoc.zip -d "$HOME"/protoc
        - mkdir -p "$HOME"/src && ln -s "$HOME"/protoc "$HOME"/src/protobuf
        - go get -u github.com/golang/protobuf/protoc-gen-go
        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - export PATH=$HOME/protoc/bin:$GOPATH/bin:$PATH
        - go mod vendor
        - make generated
      script:
        - make coverage
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - stage: Build & Publish Docker Image
      if: branch = master
      services:
        - docker
      before_script:
        - go get -v -d google.golang.org/grpc
        - go get -v -d -t github.com/golang/protobuf/...
        - curl -L https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip -o /tmp/protoc.zip
        - mkdir -p "$HOME"/protoc
        - unzip /tmp/protoc.zip -d "$HOME"/protoc
        - mkdir -p "$HOME"/src && ln -s "$HOME"/protoc "$HOME"/src/protobuf
        - go get -u github.com/golang/protobuf/protoc-gen-go
        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - export PATH=$HOME/protoc/bin:$GOPATH/bin:$PATH
        - go mod vendor
        - make generated
      script:
        - make postgres
        - make docker
        - echo $GITHUB_DOCKER_PASSWORD | docker login docker.pkg.github.com -u=$GITHUB_DOCKER_USERNAME --password-stdin
        - docker tag noahdb-postgres:latest docker.pkg.github.com/elliotcourant/noahdb/postgres:12
        - docker tag noahdb:latest docker.pkg.github.com/elliotcourant/noahdb/noahdb:latest
        - docker push docker.pkg.github.com/elliotcourant/noahdb/postgres:12
        - docker push docker.pkg.github.com/elliotcourant/noahdb/noahdb:latest